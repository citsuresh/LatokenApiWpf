<Window x:Class="LatokenAPIWpfClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        DataContext="{Binding Path=ViewModel, RelativeSource={RelativeSource Self}}"
        xmlns:busyindicator="https://github.com/Peoky/BusyIndicator"
        xmlns:local="clr-namespace:LatokenAPIWpfClient" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="Latoken WPF UI" Height="450" Width="800">
    <busyindicator:BusyMask x:Name="BusyIndicator" IsBusy="{Binding IsBusy}" IndicatorType="Dashes" BusyContent="Please wait..." >

        <Grid >
            <TabControl Margin="0,51,0,0" x:Name="TabControl">
                <TabItem Header=" Wallet ">
                    <Grid  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Label Margin="0,-4,165,0" Content="Last Refreshed On:" Height="28" VerticalAlignment="Top" HorizontalAlignment="Right" Width="132" Grid.Column="1" />
                        <Label Margin="0,10,165,0" Content="{Binding LastRefreshedWalletOn}" Height="27" VerticalAlignment="Top" HorizontalAlignment="Right" Width="132" Grid.Column="1" />
                        <Button Margin="0,6,302,0" Content="Refresh Values" Command="{Binding RefreshRatesCommand}" CommandParameter="{x:Static local:BalanceTypes.Wallet}" Height="29" VerticalAlignment="Top" HorizontalAlignment="Right" Width="132" Grid.Column="1" />
                        <CheckBox IsChecked="{Binding IsHideWalletZeroBalances}" Content="Hide Zero Balances" Margin="0,5,0,0" HorizontalAlignment="Right" Width="143" Height="19" VerticalAlignment="Top" Grid.Column="1"/>
                        <DataGrid ItemsSource="{Binding WalletCollectionView}" AutoGenerateColumns="False" Margin="0,45,0,0" Grid.ColumnSpan="2" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Token"  Binding="{Binding Token.Tag}" />
                                <DataGridTextColumn Header="Token Name"  Binding="{Binding Token.Name}" />
                                <DataGridTextColumn Header="Avaiable Balance" Binding="{Binding Balance.Available}" />
                                <DataGridTextColumn Header="Value in USDT" Binding="{Binding AvailableCurrencyValueInBase}" />
                                <DataGridTextColumn Header="Last Refreshed On" Binding="{Binding LastRefreshedOn}" />
                                <DataGridTemplateColumn Header="Refresh">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                                <Hyperlink 
                                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType= {x:Type Window}}, Path=DataContext.RowRefreshClickedCommand}" 
                                                    CommandParameter="{Binding}">
                                                    <TextBlock Text="{Binding Path=Name}"/>
                                                    <TextBlock Text="{Binding RefreshColumnText}"/>
                                                </Hyperlink>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Button Margin="0,5,455,0" Content="Fetch Available Tokens" Command="{Binding FetchTokenBalancesCommand}" CommandParameter="{x:Static local:BalanceTypes.Wallet}" Height="31" VerticalAlignment="Top" HorizontalAlignment="Right" Width="151" Grid.Column="1" />
                    </Grid>
                </TabItem>
                <TabItem Header=" Spot ">
                    <Grid  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <CheckBox IsChecked="{Binding IsHideSpotZeroBalances}" Content="Hide Zero Balances" Margin="0,5,0,0" HorizontalAlignment="Right" Width="143" Height="19" VerticalAlignment="Top"/>
                        <DataGrid ItemsSource="{Binding SpotCollectionView}" AutoGenerateColumns="False" Margin="0,45,0,0" IsReadOnly="True" CanUserAddRows="False" CanUserDeleteRows="False" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Token"  Binding="{Binding Token.Tag}" />
                                <DataGridTextColumn Header="Token Name"  Binding="{Binding Token.Name}" />
                                <DataGridTextColumn Header="Avaiable Balance" Binding="{Binding Balance.Available}" />
                                <DataGridTextColumn Header="Value in USDT" Binding="{Binding AvailableCurrencyValueInBase}" />
                                <DataGridTextColumn Header="Last Refreshed On" Binding="{Binding LastRefreshedOn}" />
                                <DataGridTemplateColumn Header="Refresh">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                                <Hyperlink 
                                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType= {x:Type Window}}, Path=DataContext.RowRefreshClickedCommand}" 
                                                    CommandParameter="{Binding}">
                                                    <TextBlock Text="{Binding Path=Name}"/>
                                                    <TextBlock Text="{Binding RefreshColumnText}"/>
                                                </Hyperlink>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Label Margin="0,-4,165,0" Content="Last Refreshed On:" Height="28" VerticalAlignment="Top" HorizontalAlignment="Right" Width="132" />
                        <Label Margin="0,10,165,0" Content="{Binding LastRefreshedSpotOn}" Height="27" VerticalAlignment="Top" HorizontalAlignment="Right" Width="132" />
                        <Button Margin="0,6,302,0" Content="Refresh Values" Command="{Binding RefreshRatesCommand}" CommandParameter="{x:Static local:BalanceTypes.Spot}"  Height="29" VerticalAlignment="Top" HorizontalAlignment="Right" Width="132" />
                        <Button Margin="0,5,455,0" Content="Fetch Available Tokens" Command="{Binding FetchTokenBalancesCommand}" CommandParameter="{x:Static local:BalanceTypes.Spot}" Height="31" VerticalAlignment="Top" HorizontalAlignment="Right" Width="151" />
                    </Grid>
                </TabItem>
                <TabItem Header="Account Settings" x:Name="AccountSettingsTabItem">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="45"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="255"/>
                            <ColumnDefinition Width="530"/>
                            <ColumnDefinition Width="12*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock FontSize="15" FontWeight="SemiBold" Height="23" VerticalAlignment="Center" HorizontalAlignment="Center" Width="765" Grid.ColumnSpan="2"><Run Text="Latoken .NET API Keys"/></TextBlock>
                        <TextBlock Margin="0,3,0,0" FontSize="15" Height="23" VerticalAlignment="Top" HorizontalAlignment="Center" Width="235" Grid.Row="1"><Run Text="Enter your Latoken API Public key"/></TextBlock>
                        <TextBox Text="{Binding PublicKey}" Margin="10,3,10,3" Height="23" VerticalAlignment="Top" HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="1" />
                        <TextBlock FontSize="15" Height="23" VerticalAlignment="Center" HorizontalAlignment="Center" Width="235" Grid.Row="2"><Run Text="Enter your Latoken API Private key"/></TextBlock>
                        <TextBox Text="{Binding PrivateKey}" Margin="10,3,10,3" Height="23" VerticalAlignment="Top" HorizontalAlignment="Stretch" Grid.Row="2" Grid.Column="1" />
                        <Button Command="{Binding SaveKeysCommand}" Margin="440,0,0,0" Content="Save" Height="31" VerticalAlignment="Center" HorizontalAlignment="Left" Width="80" Grid.Column="1" />
                    </Grid>
                </TabItem>
            </TabControl>
            <Image HorizontalAlignment="Left" Height="46" VerticalAlignment="Top" Width="51" Source="/Latoken_Logo.png" RenderTransformOrigin="0.745,0.544" Margin="10,0,0,0">
            </Image>
            <TextBlock Margin="81,10,0,0" FontSize="25" FontWeight="SemiBold" Height="36" VerticalAlignment="Top" HorizontalAlignment="Left" Width="378">Latoken .NET API sample</TextBlock>
        </Grid>
    </busyindicator:BusyMask>
</Window>